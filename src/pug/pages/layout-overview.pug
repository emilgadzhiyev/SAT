include ../layout

+layout
    h1 Overview
    p.intro-text
        | Components and options for laying out your Bootstrap project, including wrapping containers, a powerful grid system, a flexible media object, and responsive utility classes.
    h2 Containers
    p.intro-text
        | Containers are the most basic layout element in Bootstrap and are required when using our default grid system. Containers are used to contain, pad, and (sometimes) center the content within them. While containers can be nested, most layouts do not require a nested container.
    p.intro-text
        | Bootstrap comes with three different containers:
    ul
        li
            code(style='color:red') .container
            | , which sets a 
            code(style='color:red') max-width
            |  at each responsive breakpoint
        li 
            code(style='color:red') .container-fluid
            | , which is 
            code(style='color:red') width: 100%
            |  at all breakpoints
        li
            code(style='color:red') .container-{breakpoint}
            | , which is 
            code(style='color:red') width: 100%
            |  until the specified breakpoint
    p.intro-text
        | The table below illustrates how each container’s 
        code(style='color:red') max-width
        |  compares to the original 
        code(style='color:red') .container
        |  and 
        code(style='color:red') .container-fluid
        |  across each breakpoint.
    table
        thead
            tr
                td 
                td Extra small (<576px)
                td Small (≥576px)
                td Medium (≥768px)
                td Large (≥992px)
                td Extra large (≥1200px)
        tbody
            tr
                td
                    code(style='color:red') .container
                td 100%
                td 540px
                td 720px
                td 960px
                td 1140px
            tr
                td
                    code(style='color:red') .container-sm
                td 100%
                td 540px
                td 720px
                td 960px
                td 1140px
            tr
                td
                    code(style='color:red') .container-md
                td 100%
                td 100%
                td 720px
                td 960px
                td 1140px
            tr
                td
                    code(style='color:red') .container-lg
                td 100%
                td 100%
                td 100%
                td 960px
                td 1140px
            tr
                td
                    code(style='color:red') .container-xl
                td 100%
                td 100%
                td 100%
                td 100%
                td 1140px
            tr
                td
                    code(style='color:red') .container-fluid
                td 100%
                td 100%
                td 100%
                td 100%
                td 100%
    <br>
    h2 All-in-one
    p.intro-text
        | Our default 
        code(style='color:red') .container 
        | class is a responsive, fixed-width container, meaning its 
        code(style='color:red') max-width 
        | changes at each breakpoint.
    pre
        code.html
            |&lt;div class="container"&gt;
            |  &lt;!-- Content here --&gt;
            |&lt;/div&gt;
    h2 Fluid
    p.intro-text
        | Use 
        code(style='color:red') .container-fluid 
        | for a full width container, spanning the entire width of the viewport.
    pre
        code.html
            |&lt;div class="container-fluid"&gt;
            |  &lt;!-- Content here --&gt;
            |&lt;/div&gt;
    h2 Responsive
    p.intro-text
        | Responsive containers are new in Bootstrap v4.4. They allow you to specify a class that is 100% wide until the specified breakpoint is reached, after which we apply 
        code(style='color:red') max-width
        | s for each of the higher breakpoints. For example, 
        code(style='color:red') .container-sm 
        | is 100% wide to start until the 
        code(style='color:red') sm 
        | breakpoint is reached, where it will scale up with 
        code(style='color:red') md
        | , 
        code(style='color:red') lg
        | , and 
        code(style='color:red') xl
        | .
    pre
        code.html
            |&lt;div class="container-sm"&gt;100% wide until small breakpoint&lt;/div&gt;
            |&lt;div class="container-md"&gt;100% wide until medium breakpoint&lt;/div&gt;
            |&lt;div class="container-lg"&gt;100% wide until large breakpoint&lt;/div&gt;
            |&lt;div class="container-xl"&gt;100% wide until extra large breakpoint&lt;/div&gt;
    h2 Responsive breakpoints
    p.intro-text
        | Since Bootstrap is developed to be mobile first, we use a handful of media queries to create sensible breakpoints for our layouts and interfaces. These breakpoints are mostly based on minimum viewport widths and allow us to scale up elements as the viewport changes.
    p.intro-text    
        | Bootstrap primarily uses the following media query ranges—or breakpoints—in our source Sass files for our layout, grid system, and components.
    pre
        code.css
            | // Extra small devices (portrait phones, less than 576px)
            | // No media query for `xs` since this is the default in Bootstrap
            | // Small devices (landscape phones, 576px and up)
            | @media (min-width: 576px) { ... }
            | // Medium devices (tablets, 768px and up)
            | @media (min-width: 768px) { ... }
            | // Large devices (desktops, 992px and up)
            | @media (min-width: 992px) { ... }
            | // Extra large devices (large desktops, 1200px and up)
            | @media (min-width: 1200px) { ... }
    p.intro-text
        | Since we write our source CSS in Sass, all our media queries are available via Sass mixins:
    pre
        code.scss
            | // No media query necessary for xs breakpoint as it's effectively `@media (min-width: 0) { ... }`
            | @include media-breakpoint-up(sm) { ... }
            | @include media-breakpoint-up(md) { ... }
            | @include media-breakpoint-up(lg) { ... }
            | @include media-breakpoint-up(xl) { ... }
            | // Example: Hide starting at `min-width: 0`, and then show at the `sm` breakpoint
            | .custom-class {
            |   display: none;
            | }
            | @include media-breakpoint-up(sm) {
            |   .custom-class {
            |       display: block;
            |   }
            | }
    p.intro-text
        | We occasionally use media queries that go in the other direction (the given screen size or smaller):
    pre
        code.css
            | // Extra small devices (portrait phones, less than 576px)
            | @media (max-width: 575.98px) { ... }
            | // Small devices (landscape phones, less than 768px)
            | @media (max-width: 767.98px) { ... }
            | // Medium devices (tablets, less than 992px)
            | @media (max-width: 991.98px) { ... }
            | // Large devices (desktops, less than 1200px)
            | @media (max-width: 1199.98px) { ... }
            | // Extra large devices (large desktops)
            | // No media query since the extra-large breakpoint has no upper bound on its width
    p.intro-text
        | Once again, these media queries are also available via Sass mixins:
    pre
        code.scss
            | @include media-breakpoint-down(xs) { ... }
            | @include media-breakpoint-down(sm) { ... }
            | @include media-breakpoint-down(md) { ... }
            | @include media-breakpoint-down(lg) { ... }
            | // No media query necessary for xl breakpoint as it has no upper bound on its width
            | // Example: Style from medium breakpoint and down
            | @include media-breakpoint-down(md) {
            |   .custom-class {
            |       display: block;
            |   }
            | }
    p.intro-text
        | There are also media queries and mixins for targeting a single segment of screen sizes using the minimum and maximum breakpoint widths.
    pre
        code.css
            | // Extra small devices (portrait phones, less than 576px)
            | @media (max-width: 575.98px) { ... }
            | // Small devices (landscape phones, 576px and up)
            | @media (min-width: 576px) and (max-width: 767.98px) { ... }
            | // Medium devices (tablets, 768px and up)
            | @media (min-width: 768px) and (max-width: 991.98px) { ... }
            | // Large devices (desktops, 992px and up)
            | @media (min-width: 992px) and (max-width: 1199.98px) { ... }
            | // Extra large devices (large desktops, 1200px and up)
            | @media (min-width: 1200px) { ... }
    p.intro-text
        | These media queries are also available via Sass mixins:
    pre
        code.scss
            | @include media-breakpoint-only(xs) { ... }
            | @include media-breakpoint-only(sm) { ... }
            | @include media-breakpoint-only(md) { ... }
            | @include media-breakpoint-only(lg) { ... }
            | @include media-breakpoint-only(xl) { ... }
    p.intro-text
        | Similarly, media queries may span multiple breakpoint widths:
    pre
        code.css
            | /* Apply styles starting from medium devices and up to extra large devices. */
            | @media (min-width: 768px) and (max-width: 1199.98px) { ... }
    h2 Z-index